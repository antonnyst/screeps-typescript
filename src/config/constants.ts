export const MINERAL_MINING_ENERGY_NEEDED = 50000;
export const PUSH_GCL_ENERGY_NEEDED = 400000;

// How much of each resource type should be stored in the terminal
export const TERMINAL_ENERGY_MIN = 30000;
export const TERMINAL_ENERGY_MAX = 40000;
export const TERMINAL_MINERAL_MIN = 6000;
export const TERMINAL_MINERAL_MAX = 12000;
export const TERMINAL_BOOST_MIN = 1000;
export const TERMINAL_BOOST_MAX = 5000;
export const TERMINAL_RAW_COMMODITY_MIN = 1000;
export const TERMINAL_RAW_COMMODITY_MAX = 5000;
export const TERMINAL_COMMODITY_MIN = 1000;
export const TERMINAL_COMMODITY_MAX = 5000;

// How much energy should be stored in the factory
export const FACTORY_ENERGY_MIN = 5000;
export const FACTORY_ENERGY_MAX = 10000;

// How much of each raw commodity should be stored in each room
export const ROOM_RAW_COMMODITY_IMPORT_LIMIT = 2000;
export const ROOM_RAW_COMMODITY_EXPORT_LIMIT = 6000;

// How much of each mineral should be stored in each room
export const ROOM_MINERAL_IMPORT_LIMIT = 12000;
export const ROOM_MINERAL_EXPORT_LIMIT = 24000;

// How much energy should be stored in each room
export const ROOM_ENERGY_IMPORT_LIMIT = 150000;
export const ROOM_ENERGY_EXPORT_LIMIT = 400000;

// How many percents of max health should rampart be maintained at
export const RAMPART_PERCENTAGE_MIN = 0.03;
export const RAMPART_PERCENTAGE_MAX = 0.04;

// Resource categorisation
export const TERMINAL_MINERALS: ResourceConstant[] = [
  RESOURCE_HYDROGEN,
  RESOURCE_OXYGEN,
  RESOURCE_UTRIUM,
  RESOURCE_KEANIUM,
  RESOURCE_LEMERGIUM,
  RESOURCE_ZYNTHIUM,
  RESOURCE_CATALYST
];

export const TERMINAL_BOOSTS: ResourceConstant[] = Object.keys(REACTION_TIME) as ResourceConstant[];

export const TERMINAL_RAW_COMMODITIES: ResourceConstant[] = [
  RESOURCE_MIST,
  RESOURCE_BIOMASS,
  RESOURCE_METAL,
  RESOURCE_SILICON
];

export const TERMINAL_COMMODITIES: ResourceConstant[] = Object.keys(COMMODITIES).filter(
  c =>
    !TERMINAL_MINERALS.includes(c as ResourceConstant) &&
    !TERMINAL_BOOSTS.includes(c as ResourceConstant) &&
    !TERMINAL_RAW_COMMODITIES.includes(c as ResourceConstant) &&
    !([RESOURCE_ENERGY, RESOURCE_POWER] as ResourceConstant[]).includes(c as ResourceConstant)
) as ResourceConstant[];

export const MARKET_RESOURCES: MarketResourceConstant[] = (RESOURCES_ALL as MarketResourceConstant[]).concat(
  Object.values(INTERSHARD_RESOURCES) as MarketResourceConstant[]
);

/**
 * Posted 13 March 2018 by @shibdib
 * Boost Components
 */
export const BOOST_COMPONENTS: Partial<Record<ResourceConstant, ResourceConstant[]>> = {
  // Tier 3
  [RESOURCE_CATALYZED_GHODIUM_ALKALIDE]: [RESOURCE_GHODIUM_ALKALIDE, RESOURCE_CATALYST],
  [RESOURCE_CATALYZED_GHODIUM_ACID]: [RESOURCE_GHODIUM_ACID, RESOURCE_CATALYST],
  [RESOURCE_CATALYZED_ZYNTHIUM_ACID]: [RESOURCE_ZYNTHIUM_ACID, RESOURCE_CATALYST],
  [RESOURCE_CATALYZED_ZYNTHIUM_ALKALIDE]: [RESOURCE_ZYNTHIUM_ALKALIDE, RESOURCE_CATALYST],
  [RESOURCE_CATALYZED_LEMERGIUM_ALKALIDE]: [RESOURCE_LEMERGIUM_ALKALIDE, RESOURCE_CATALYST],
  [RESOURCE_CATALYZED_LEMERGIUM_ACID]: [RESOURCE_LEMERGIUM_ACID, RESOURCE_CATALYST],
  [RESOURCE_CATALYZED_KEANIUM_ALKALIDE]: [RESOURCE_KEANIUM_ALKALIDE, RESOURCE_CATALYST],
  [RESOURCE_CATALYZED_KEANIUM_ACID]: [RESOURCE_KEANIUM_ACID, RESOURCE_CATALYST],
  [RESOURCE_CATALYZED_UTRIUM_ACID]: [RESOURCE_UTRIUM_ACID, RESOURCE_CATALYST],
  [RESOURCE_CATALYZED_UTRIUM_ALKALIDE]: [RESOURCE_UTRIUM_ALKALIDE, RESOURCE_CATALYST],
  // Tier 2
  [RESOURCE_GHODIUM_ACID]: [RESOURCE_GHODIUM_HYDRIDE, RESOURCE_HYDROXIDE],
  [RESOURCE_GHODIUM_ALKALIDE]: [RESOURCE_GHODIUM_OXIDE, RESOURCE_HYDROXIDE],
  [RESOURCE_ZYNTHIUM_ACID]: [RESOURCE_ZYNTHIUM_HYDRIDE, RESOURCE_HYDROXIDE],
  [RESOURCE_ZYNTHIUM_ALKALIDE]: [RESOURCE_ZYNTHIUM_OXIDE, RESOURCE_HYDROXIDE],
  [RESOURCE_LEMERGIUM_ALKALIDE]: [RESOURCE_LEMERGIUM_OXIDE, RESOURCE_HYDROXIDE],
  [RESOURCE_LEMERGIUM_ACID]: [RESOURCE_LEMERGIUM_HYDRIDE, RESOURCE_HYDROXIDE],
  [RESOURCE_KEANIUM_ALKALIDE]: [RESOURCE_KEANIUM_OXIDE, RESOURCE_HYDROXIDE],
  [RESOURCE_KEANIUM_ACID]: [RESOURCE_KEANIUM_HYDRIDE, RESOURCE_HYDROXIDE],
  [RESOURCE_UTRIUM_ACID]: [RESOURCE_UTRIUM_HYDRIDE, RESOURCE_HYDROXIDE],
  [RESOURCE_UTRIUM_ALKALIDE]: [RESOURCE_UTRIUM_OXIDE, RESOURCE_HYDROXIDE],
  // Tier 1
  [RESOURCE_GHODIUM_HYDRIDE]: [RESOURCE_GHODIUM, RESOURCE_HYDROGEN],
  [RESOURCE_GHODIUM_OXIDE]: [RESOURCE_GHODIUM, RESOURCE_OXYGEN],
  [RESOURCE_ZYNTHIUM_HYDRIDE]: [RESOURCE_ZYNTHIUM, RESOURCE_HYDROGEN],
  [RESOURCE_ZYNTHIUM_OXIDE]: [RESOURCE_ZYNTHIUM, RESOURCE_OXYGEN],
  [RESOURCE_LEMERGIUM_OXIDE]: [RESOURCE_LEMERGIUM, RESOURCE_OXYGEN],
  [RESOURCE_LEMERGIUM_HYDRIDE]: [RESOURCE_LEMERGIUM, RESOURCE_HYDROGEN],
  [RESOURCE_KEANIUM_OXIDE]: [RESOURCE_KEANIUM, RESOURCE_OXYGEN],
  [RESOURCE_KEANIUM_HYDRIDE]: [RESOURCE_KEANIUM, RESOURCE_HYDROGEN],
  [RESOURCE_UTRIUM_HYDRIDE]: [RESOURCE_UTRIUM, RESOURCE_HYDROGEN],
  [RESOURCE_UTRIUM_OXIDE]: [RESOURCE_UTRIUM, RESOURCE_OXYGEN],
  // Base
  [RESOURCE_GHODIUM]: [RESOURCE_ZYNTHIUM_KEANITE, RESOURCE_UTRIUM_LEMERGITE],
  [RESOURCE_HYDROXIDE]: [RESOURCE_OXYGEN, RESOURCE_HYDROGEN],
  [RESOURCE_ZYNTHIUM_KEANITE]: [RESOURCE_ZYNTHIUM, RESOURCE_KEANIUM],
  [RESOURCE_UTRIUM_LEMERGITE]: [RESOURCE_UTRIUM, RESOURCE_LEMERGIUM]
};
